-- JUPJUP 마켓 데이터베이스 스키마 (최신 버전)
-- 채팅 및 댓글 기능 포함
-- 업데이트 날짜: 2025-01-27

use market_db;

-- 기존 테이블 삭제 (의존성 역순으로 삭제)
DROP TABLE IF EXISTS comment_likes;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS chat_messages;
DROP TABLE IF EXISTS chat_rooms;
DROP TABLE IF EXISTS commupost;
DROP TABLE IF EXISTS buypost;
DROP TABLE IF EXISTS sellpost;
DROP TABLE IF EXISTS user;

-- 1. 사용자 테이블 (email 컬럼 추가)
CREATE TABLE user (
  usernumber INT AUTO_INCREMENT PRIMARY KEY,
  userid VARCHAR(50) NOT NULL UNIQUE,
  password VARCHAR(100) NOT NULL,
  username VARCHAR(50) NOT NULL UNIQUE,
  phone VARCHAR(20),
  email VARCHAR(100),
  createdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 2. 판매 게시글 테이블 (다중 이미지 지원)
CREATE TABLE sellpost (
  postid INT AUTO_INCREMENT PRIMARY KEY,
  usernumber INT NOT NULL,
  username VARCHAR(50) NOT NULL,
  category VARCHAR(100),
  title VARCHAR(200) NOT NULL,
  content TEXT NOT NULL,
  image VARCHAR(1000),  -- 다중 이미지 파일명 저장 (JSON 형태)
  image_paths TEXT,     -- 전체 이미지 경로 저장
  price DECIMAL(10, 2),
  sold ENUM('판매중', '판매완료', '예약중') DEFAULT '판매중',
  location VARCHAR(100),
  viewcnt INT DEFAULT 0,
  createdtime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedtime TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  
  FOREIGN KEY (usernumber) REFERENCES user(usernumber),
  FOREIGN KEY (username) REFERENCES user(username)
);

-- 3. 구매 요청 게시글 테이블 (다중 이미지 지원)
CREATE TABLE buypost (
  postid INT AUTO_INCREMENT PRIMARY KEY,
  usernumber INT NOT NULL,
  username VARCHAR(50) NOT NULL,
  category VARCHAR(100),
  title VARCHAR(200) NOT NULL,
  content TEXT NOT NULL,
  image VARCHAR(1000),  -- 다중 이미지 파일명 저장 (JSON 형태)
  image_paths TEXT,     -- 전체 이미지 경로 저장
  price DECIMAL(10, 2),
  phone VARCHAR(100),
  calltime VARCHAR(100),
  deal SET('직거래', '택배'),
  concat SET('채팅', '문자', '전화'),
  sold ENUM('구하는중', '구함완료') DEFAULT '구하는중',
  urgency ENUM('일반', '급구') DEFAULT '일반',
  location VARCHAR(100),
  viewcnt INT DEFAULT 0,
  createdtime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedtime TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  
  FOREIGN KEY (usernumber) REFERENCES user(usernumber),
  FOREIGN KEY (username) REFERENCES user(username)
);

-- 4. 커뮤니티 게시글 테이블 (다중 이미지 지원)
CREATE TABLE commupost (
  postid INT AUTO_INCREMENT PRIMARY KEY,
  usernumber INT NOT NULL,
  username VARCHAR(100) NOT NULL,
  category VARCHAR(100),
  visible VARCHAR(50),
  title VARCHAR(255) NOT NULL,
  content TEXT NOT NULL,
  img VARCHAR(1000),     -- 다중 이미지 파일명 저장 (JSON 형태)
  img_paths TEXT,        -- 전체 이미지 경로 저장
  tag VARCHAR(255),
  viewcnt INT DEFAULT 0,
  createtime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatetime TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  
  FOREIGN KEY (usernumber) REFERENCES user(usernumber),
  FOREIGN KEY (username) REFERENCES user(username)
);

-- 5. 채팅방 테이블 (NEW)
CREATE TABLE chat_rooms (
  room_id INT AUTO_INCREMENT PRIMARY KEY,
  user1_id VARCHAR(50) NOT NULL,
  user1_name VARCHAR(100) NOT NULL,
  user2_id VARCHAR(50) NOT NULL,
  user2_name VARCHAR(100) NOT NULL,
  post_type VARCHAR(10) NOT NULL,
  post_id INT NOT NULL,
  post_title VARCHAR(200) NOT NULL,
  last_message TEXT,
  last_message_time TIMESTAMP NULL,
  created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  is_active BOOLEAN DEFAULT TRUE,
  unread_count1 INT DEFAULT 0,
  unread_count2 INT DEFAULT 0,
  
  INDEX idx_users (user1_id, user2_id),
  INDEX idx_post (post_type, post_id)
);

-- 6. 채팅 메시지 테이블 (NEW)
CREATE TABLE chat_messages (
  chat_id INT AUTO_INCREMENT PRIMARY KEY,
  room_id INT NOT NULL,
  sender_id VARCHAR(50) NOT NULL,
  sender_name VARCHAR(100) NOT NULL,
  receiver_id VARCHAR(50) NOT NULL,
  receiver_name VARCHAR(100) NOT NULL,
  message TEXT NOT NULL,
  message_type VARCHAR(20) DEFAULT 'text',
  image_url VARCHAR(500),
  created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  is_read BOOLEAN DEFAULT FALSE,
  post_type VARCHAR(10) NOT NULL,
  post_id INT NOT NULL,
  
  FOREIGN KEY (room_id) REFERENCES chat_rooms(room_id) ON DELETE CASCADE,
  INDEX idx_room (room_id),
  INDEX idx_sender (sender_id),
  INDEX idx_receiver (receiver_id),
  INDEX idx_read (is_read),
  INDEX idx_time (created_time)
);

-- 7. 댓글 테이블 (NEW)
CREATE TABLE comments (
  comment_id INT AUTO_INCREMENT PRIMARY KEY,
  post_id INT NOT NULL,
  post_type VARCHAR(20) NOT NULL DEFAULT 'community',
  user_id VARCHAR(50),
  username VARCHAR(50) NOT NULL,
  content TEXT NOT NULL,
  parent_comment_id INT DEFAULT NULL,
  created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE,
  like_count INT DEFAULT 0,
  
  INDEX idx_post_id (post_id),
  INDEX idx_post_type (post_type),
  INDEX idx_parent_comment (parent_comment_id),
  INDEX idx_created_time (created_time)
);

-- 8. 댓글 좋아요 테이블 (NEW)
CREATE TABLE comment_likes (
  like_id INT AUTO_INCREMENT PRIMARY KEY,
  comment_id INT NOT NULL,
  user_id VARCHAR(50) NOT NULL,
  created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  
  UNIQUE KEY unique_like (comment_id, user_id),
  FOREIGN KEY (comment_id) REFERENCES comments(comment_id) ON DELETE CASCADE
);

-- 기존 테스트 계정 데이터 (email 추가)
INSERT INTO user (userid, password, username, phone, email) VALUES
('admin', '1234', '관리자', '010-1234-5678', 'admin@market.com'),
('test', '1234', '테스트유저', '010-2345-6789', 'test@market.com'),
('user1', '1234', '김철수', '010-3456-7890', 'user1@market.com'),
('user2', '1234', '이영희', '010-4567-8901', 'user2@market.com'),
('user3', '1234', '박민수', '010-5678-9012', 'user3@market.com'),
('user4', '1234', '최지은', '010-6789-0123', 'user4@market.com'),
('user5', '1234', '정민호', '010-7890-1234', 'user5@market.com'),
('user6', '1234', '김영수', '010-8901-2345', 'user6@market.com');

-- 샘플 판매 게시글 데이터
INSERT INTO sellpost (usernumber, username, category, title, content, price, sold, location, viewcnt) VALUES
(3, '김철수', '전자기기', '갤럭시 S23 울트라 판매합니다', '1년 사용한 갤럭시 S23 울트라입니다. 케이스 끼고 사용해서 상태 좋습니다. 충전기, 이어폰 포함입니다.', 800000, '판매중', '서울 강남구', 45),
(4, '이영희', '패션/의류', '구찌 가방 정품 판매', '작년에 구입한 구찌 숄더백입니다. 몇 번 사용하지 않아 새것과 다름없습니다. 정품 인증서 있습니다.', 1200000, '판매중', '서울 청담동', 67),
(5, '박민수', '도서/문구', '컴퓨터 프로그래밍 책 세트', '개발 관련 책들을 일괄 판매합니다. Java, Python, 웹개발 관련 책 총 15권입니다.', 150000, '판매중', '경기 수원시', 23),
(6, '최지은', '생활용품', '에어프라이어 거의 새것', '결혼 선물로 받았는데 사용할 일이 없어 판매합니다. 2-3번 정도만 사용했습니다.', 80000, '판매중', '부산 서면', 34),
(2, '테스트유저', '게임/취미', 'PS5 + 게임 5개 세트', '플스5 본체와 인기 게임 5개를 함께 판매합니다. 모든 박스와 구성품 완비되어 있습니다.', 650000, '예약중', '서울 홍대', 89),
(7, '정민호', '전자기기', '아이폰 14 Pro 128GB 판매', '6개월 사용한 아이폰 14 Pro입니다. 액정보호필름과 케이스 함께 드립니다.', 900000, '판매중', '인천 부평', 56);

-- 샘플 구매 요청 데이터
INSERT INTO buypost (usernumber, username, category, title, content, price, phone, calltime, deal, concat, urgency, location, viewcnt) VALUES
(2, '테스트유저', '전자기기', '아이폰 13 Pro 256GB 구매합니다', '깨끗한 상태의 아이폰 13 Pro를 찾고 있습니다. 색상은 상관없고 256GB 모델로 부탁드립니다.', 700000, '010-2345-6789', '오후 6시 이후', '직거래,택배', '채팅,문자', '일반', '서울 강남구', 15),
(3, '김철수', '전자기기', '맥북 프로 16인치 M1 필요해요', '개발용으로 사용할 맥북 프로 16인치를 구하고 있습니다. 2020년 이후 모델이면 좋겠어요.', 2500000, '010-3456-7890', '평일 저녁', '직거래', '채팅,전화', '급구', '서울 서초구', 23),
(4, '이영희', '전자기기', '에어팟 프로 2세대 구매', '운동할 때 사용할 에어팟 프로 2세대를 구매하고 싶습니다. 정품 인증서 있으면 더 좋아요.', 300000, '010-4567-8901', '언제든지', '직거래,택배', '채팅,문자', '일반', '경기 성남시', 8),
(8, '김영수', '자동차', '중고차 구매합니다', 'K5 또는 아반떼 2019년 이후 모델을 찾고 있습니다. 무사고 차량 선호합니다.', 15000000, '010-8901-2345', '평일 오후', '직거래', '채팅,전화', '일반', '경기 성남시', 34);

-- 샘플 커뮤니티 게시글 데이터
INSERT INTO commupost (usernumber, username, category, visible, title, content, tag, viewcnt) VALUES
(1, '관리자', '공지사항', '전체공개', '🎉 JUPJUP 마켓 오픈 안내', '안녕하세요! JUPJUP 마켓이 정식으로 오픈했습니다. 앞으로 더 나은 서비스를 제공하기 위해 노력하겠습니다.', '공지,오픈', 156),
(2, '테스트유저', '자유게시판', '전체공개', '중고 거래 팁 공유', '중고 거래할 때 주의사항들을 공유해드립니다. 1. 직거래 시 안전한 장소에서 만나세요. 2. 상품 상태를 꼼꼼히 확인하세요.', '팁,거래', 89),
(3, '김철수', '질문게시판', '전체공개', '판매글 작성 방법 문의', '처음 판매글을 작성하는데 어떻게 해야 하나요? 이미지는 몇 장까지 올릴 수 있나요?', '질문,판매', 67),
(4, '이영희', '자유게시판', '전체공개', '좋은 거래 후기', '어제 에어프라이어 구매했는데 정말 깨끗하고 좋네요! 판매자님 감사합니다.', '후기,감사', 45),
(5, '박민수', '정보공유', '전체공개', '중고 전자기기 체크리스트', '중고 전자기기 구매 시 체크해야 할 항목들을 정리해봤습니다. 배터리 상태, 화면 상태, 기능 동작 등...', '정보,전자기기', 123);

-- 샘플 채팅방 데이터
INSERT INTO chat_rooms (user1_id, user1_name, user2_id, user2_name, post_type, post_id, post_title, last_message, last_message_time) VALUES
('test', '테스트유저', 'user1', '김철수', 'sell', 1, '갤럭시 S23 울트라 판매합니다', '네, 직거래 가능합니다!', NOW()),
('user2', '이영희', 'user3', '박민수', 'buy', 1, '아이폰 13 Pro 256GB 구매합니다', '어떤 사양을 원하시나요?', NOW()),
('user1', '김철수', 'user3', '박민수', 'sell', 2, '구찌 가방 정품 판매', '상태가 어떤가요?', NOW()),
('user4', '최지은', 'user5', '정민호', 'sell', 3, '컴퓨터 프로그래밍 책 세트', '책 목록 좀 알려주세요', NOW());

-- 샘플 채팅 메시지 데이터
INSERT INTO chat_messages (room_id, sender_id, sender_name, receiver_id, receiver_name, message, post_type, post_id) VALUES
(1, 'test', '테스트유저', 'user1', '김철수', '안녕하세요! 갤럭시 문의드립니다.', 'sell', 1),
(1, 'user1', '김철수', 'test', '테스트유저', '네, 안녕하세요! 어떤 점이 궁금하신가요?', 'sell', 1),
(1, 'test', '테스트유저', 'user1', '김철수', '직거래 가능한가요?', 'sell', 1),
(1, 'user1', '김철수', 'test', '테스트유저', '네, 직거래 가능합니다!', 'sell', 1),
(2, 'user3', '박민수', 'user2', '이영희', '아이폰 구한다고 하셨는데 아직 구하고 계신가요?', 'buy', 1),
(2, 'user2', '이영희', 'user3', '박민수', '네, 아직 구하고 있어요. 어떤 사양을 원하시나요?', 'buy', 1),
(3, 'user3', '박민수', 'user1', '김철수', '구찌 가방 상태는 어떤가요?', 'sell', 2),
(3, 'user1', '김철수', 'user3', '박민수', '거의 새것과 같은 상태입니다. 사진 더 보여드릴까요?', 'sell', 2);

-- 샘플 댓글 데이터
INSERT INTO comments (post_id, post_type, user_id, username, content) VALUES
(1, 'community', 'test', '테스트유저', '정말 유용한 정보네요! 감사합니다.'),
(1, 'community', 'user1', '김철수', '저도 비슷한 경험이 있어서 공감이 많이 됩니다.'),
(1, 'community', 'user2', '이영희', '혹시 더 자세한 내용을 알 수 있을까요?'),
(2, 'community', 'user3', '박민수', '좋은 팁 감사합니다. 많은 도움이 되었어요!'),
(2, 'community', 'user4', '최지은', '이런 정보를 찾고 있었는데 정말 감사해요.'),
(3, 'community', 'user5', '정민호', '저도 처음 판매글 작성할 때 헷갈렸어요.'),
(1, 'sell', 'user2', '이영희', '갤럭시 상태가 정말 좋아보이네요!'),
(1, 'sell', 'user3', '박민수', '가격 협상 가능한가요?'),
(2, 'sell', 'test', '테스트유저', '구찌 가방 정품 인증서 사진도 볼 수 있을까요?');

-- 답글 샘플 데이터
INSERT INTO comments (post_id, post_type, user_id, username, content, parent_comment_id) VALUES
(1, 'community', 'admin', '관리자', '좋은 댓글이네요! 저도 동감합니다.', 1),
(2, 'community', 'test', '테스트유저', '네, 추가 정보는 개인 메시지로 보내드리겠습니다.', 3),
(1, 'sell', 'user1', '김철수', '네, 어느 정도 협상 가능합니다.', 8);

-- 성능 최적화 인덱스 생성
CREATE INDEX idx_user_userid ON user(userid);
CREATE INDEX idx_user_username ON user(username);
CREATE INDEX idx_sellpost_category ON sellpost(category);
CREATE INDEX idx_sellpost_location ON sellpost(location);
CREATE INDEX idx_sellpost_sold ON sellpost(sold);
CREATE INDEX idx_sellpost_createdtime ON sellpost(createdtime);
CREATE INDEX idx_buypost_category ON buypost(category);
CREATE INDEX idx_buypost_location ON buypost(location);
CREATE INDEX idx_buypost_sold ON buypost(sold);
CREATE INDEX idx_buypost_createdtime ON buypost(createdtime);
CREATE INDEX idx_commupost_category ON commupost(category);
CREATE INDEX idx_commupost_createtime ON commupost(createtime);
